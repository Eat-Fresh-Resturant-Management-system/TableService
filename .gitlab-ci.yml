variables:
  GIT_DEPTH: 1                               # Create a shallow copy
  BOT_NAME: "GitLab Runner Bot"              # Bot's name that appears in the commit log
  BOT_EMAIL: "au656408@uni.au.dk"            # Bot's email, not important
  GITLAB_USER: "au656408"                    # Replace with your GitLab username
  GITLAB_TOKEN: "glpat-Sy9678A5EgwRAN5djdZa" # Replace with your personal access token
  IMAGE_NAME: 'registry.gitlab.au.dk/wao-exercises1/eatfresh/eatfresh.tablebookingservice' # Path to your Docker image in the GitLab Container Registry

stages:
  - version
  - build

version:
  image: alpine:latest
  stage: version
  before_script:
    - apk add --no-cache git
    - git config --global user.email "$BOT_EMAIL"
    - git config --global user.name "$BOT_NAME"
  script:
    - |
      # Determine the next version tag based on the latest Git tag
      LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0")
      echo "Latest tag: $LATEST_TAG"
      if [[ "$LATEST_TAG" =~ ^v[0-9]+ ]]; then
        VERSION_NUMBER=${LATEST_TAG:1}
        NEW_VERSION=v$(($VERSION_NUMBER + 1))
      else
        NEW_VERSION=v1
      fi
      echo "New version: $NEW_VERSION"
      echo $NEW_VERSION > VERSION
    - git tag $NEW_VERSION
    - git push https://$GITLAB_USER:$GITLAB_TOKEN@gitlab.au.dk/wao-exercises1/eatfresh/eatfresh.tablebookingservice.git $NEW_VERSION
  artifacts:
    paths:
      - VERSION
  only:
    - main

build:
  image: griefed/docker-with-buildx:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use
    - export VERSION=$(cat VERSION)
  script:
    - docker pull "$IMAGE_NAME:$VERSION" || true
    - docker buildx build --push --tag "$IMAGE_NAME:$VERSION" --platform linux/arm64/v8,linux/amd64 --tag "$IMAGE_NAME:latest" .
  only:
    - main
    - tags
